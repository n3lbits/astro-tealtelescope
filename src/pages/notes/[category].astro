---
import ArticleCard from '../../components/ArticleCard.astro';
import { getCollection } from 'astro:content';
import type { GetStaticPaths } from 'astro';
import type { CollectionEntry } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import Categories from '../../components/Categories.astro';
type Note = CollectionEntry<'notes'>;

export const getStaticPaths = (async () => {
  const allNotes = await getCollection('notes');

  const allCategories: string[] = Array.from(
    new Set(allNotes.map((note: Note) => note.data.category))
  );

  return allCategories.map((categoryPath) => {
    const categoryNotes = allNotes.filter(
      (note: Note) => note.data.category === categoryPath
    );

    return {
      params: { category: categoryPath },
      props: { categoryNotes, allCategories },
    };
  });
}) satisfies GetStaticPaths;

const { categoryNotes, allCategories } = Astro.props;

const sortedNotes = categoryNotes.sort(
  (a: Note, b: Note) => b.data.pubDate.getTime() - a.data.pubDate.getTime()
);
---

<BaseLayout title='Notes' description='Short-form thoughts and learnings'>
  <section class='post-wrapper'>
    <div class='hero'>
      <h1>Notes</h1>
      <h2>Short, quick thoughts, ideas and other stuff</h2>
    </div>
    <Categories
      categories={allCategories}
      currentPath={Astro.url.pathname}
      basePath='notes'
    />

    <div class='content-list'>
      {
        sortedNotes.map((note: Note) => (
          <ArticleCard
            title={note.data.title}
            description={note.data.description}
            url={`/notes/${note.id}`}
            date={note.data.pubDate}
          />
        ))
      }
    </div>
  </section>
</BaseLayout>
